name: Test Suite

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/**'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      NODE_ENV: test
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_TEST_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_TEST_SECRET }}

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run database migrations
        run: |
          npm run migrate:test
          npm run seed:test

      - name: Run linter
        run: npm run lint
        
      - name: Type check
        run: npm run type-check

      - name: Run unit tests
        run: npm run test:unit -- --coverage
        
      - name: Run integration tests
        run: npm run test:integration
        
      - name: Run E2E tests
        run: npm run test:e2e

      - name: Generate test report
        if: always()
        run: |
          echo "# Test Results" > test-report.md
          echo "## Coverage Report" >> test-report.md
          cat coverage/lcov-report/index.html >> test-report.md
          echo "## Unit Test Results" >> test-report.md
          cat test-results/unit.xml >> test-report.md
          echo "## Integration Test Results" >> test-report.md
          cat test-results/integration.xml >> test-report.md
          echo "## E2E Test Results" >> test-report.md
          cat test-results/e2e.xml >> test-report.md

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/
            test-report.md
          retention-days: 14

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Check test status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ All tests passed"
          else
            echo "❌ Tests failed"
            exit 1
          fi

  notify:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify test status
        uses: actions/github-script@v6
        with:
          script: |
            const success = '${{ needs.test.result }}' === 'success';
            const icon = success ? '✅' : '❌';
            const color = success ? '#28a745' : '#dc3545';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `${icon} Test suite ${success ? 'passed' : 'failed'}

              See [test results](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`
            });